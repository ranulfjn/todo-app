{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","height","Todo","todo","index","completeTodo","removeTodo","className","style","textDecoration","isCompleted","text","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","newTodos","splice","classes","Grid","container","spacing","direction","alignItems","justify","minHeight","item","xs","Card","variant","Typography","align","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAOMA,G,MAAYC,YAAW,CAC3BC,KAAM,CAEJC,MAAO,IACPC,OAAO,QAIX,SAASC,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACzC,OACE,sBACEC,UAAU,OACVC,MAAO,CAAEC,eAAgBN,EAAKO,YAAc,eAAiB,IAF/D,UAIGP,EAAKQ,KACN,gCACE,wBAAQC,QAAS,kBAAMP,EAAaD,IAApC,sBACA,wBAAQQ,QAAS,kBAAMN,EAAWF,IAAlC,qBAMR,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACJC,mBAAS,IADL,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACE,uBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,MAIT,UACE,uBACEI,KAAK,OACLd,UAAU,QACVS,MAAOA,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOP,UAEnC,+CAmESQ,MA9Df,WAAgB,IAAD,EACYT,mBAAS,CAChC,CACEJ,KAAM,gBACND,aAAa,KAJJ,mBACNe,EADM,KACCC,EADD,KAaPrB,EAAe,SAAAD,GACnB,IAAMuB,EAAQ,YAAOF,GACrBE,EAASvB,GAAOM,aAAc,EAC9BgB,EAASC,IAGLrB,EAAa,SAAAF,GACjB,IAAMuB,EAAQ,YAAOF,GACrBE,EAASC,OAAOxB,EAAO,GACvBsB,EAASC,IAELE,EAAUhC,IAEhB,OAEE,cAACiC,EAAA,EAAD,CACAC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,SACR3B,MAAO,CAAE4B,UAAW,SANpB,SASA,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAf,SAEA,eAACC,EAAA,EAAD,CAAMhC,UAAWsB,EAAQ9B,KAAMyC,QAAQ,WAAvC,UACA,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKE,MAAM,SAA/B,uBACE,sBAAKnC,UAAU,YAAf,UACGkB,EAAMkB,KAAI,SAACxC,EAAMC,GAAP,OACT,cAACF,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,MAOT,cAACS,EAAD,CAAUC,QA3CA,SAAAH,GACd,IAAMgB,EAAQ,sBAAOF,GAAP,CAAc,CAAEd,UAC9Be,EAASC,iBCnDEiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd1c533f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {Card , Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport \"./App.css\";\n\n\nconst useStyles = makeStyles({\n  root: {\n\n    width: 500,\n    height:200,\n  },});\n\n\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] =useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <button>Submit</button>\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] =useState([\n    {\n      text: \"Get Groceries\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n  const classes = useStyles();\n\n  return (\n\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n   >\n  \n    <Grid item xs={3}>\n    \n    <Card className={classes.root} variant=\"outlined\">\n    <Typography variant=\"h4\" align=\"center\" >Todo List</Typography>\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n      </Card>\n    </Grid>      \n   </Grid>\n    \n    \n   \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}